/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app.index'
import { Route as AppSubmitBreakoutImport } from './routes/_app.submitBreakout'
import { Route as AppProposalsImport } from './routes/_app.proposals'
import { Route as AppNewProposalImport } from './routes/_app.newProposal'
import { Route as AppSubmitBreakoutIndexImport } from './routes/_app.submitBreakout/index'
import { Route as AppProposalsIndexImport } from './routes/_app.proposals/index'
import { Route as AppNewProposalIndexImport } from './routes/_app.newProposal/index'
import { Route as AppProposalsPropIdImport } from './routes/_app.proposals/$propId'
import { Route as AppNewProposalPropTypeIndexImport } from './routes/_app.newProposal/$propType.index'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppSubmitBreakoutRoute = AppSubmitBreakoutImport.update({
  id: '/submitBreakout',
  path: '/submitBreakout',
  getParentRoute: () => AppRoute,
} as any)

const AppProposalsRoute = AppProposalsImport.update({
  id: '/proposals',
  path: '/proposals',
  getParentRoute: () => AppRoute,
} as any)

const AppNewProposalRoute = AppNewProposalImport.update({
  id: '/newProposal',
  path: '/newProposal',
  getParentRoute: () => AppRoute,
} as any)

const AppSubmitBreakoutIndexRoute = AppSubmitBreakoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSubmitBreakoutRoute,
} as any)

const AppProposalsIndexRoute = AppProposalsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppProposalsRoute,
} as any)

const AppNewProposalIndexRoute = AppNewProposalIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppNewProposalRoute,
} as any)

const AppProposalsPropIdRoute = AppProposalsPropIdImport.update({
  id: '/$propId',
  path: '/$propId',
  getParentRoute: () => AppProposalsRoute,
} as any)

const AppNewProposalPropTypeIndexRoute =
  AppNewProposalPropTypeIndexImport.update({
    id: '/$propType/',
    path: '/$propType/',
    getParentRoute: () => AppNewProposalRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/newProposal': {
      id: '/_app/newProposal'
      path: '/newProposal'
      fullPath: '/newProposal'
      preLoaderRoute: typeof AppNewProposalImport
      parentRoute: typeof AppImport
    }
    '/_app/proposals': {
      id: '/_app/proposals'
      path: '/proposals'
      fullPath: '/proposals'
      preLoaderRoute: typeof AppProposalsImport
      parentRoute: typeof AppImport
    }
    '/_app/submitBreakout': {
      id: '/_app/submitBreakout'
      path: '/submitBreakout'
      fullPath: '/submitBreakout'
      preLoaderRoute: typeof AppSubmitBreakoutImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/proposals/$propId': {
      id: '/_app/proposals/$propId'
      path: '/$propId'
      fullPath: '/proposals/$propId'
      preLoaderRoute: typeof AppProposalsPropIdImport
      parentRoute: typeof AppProposalsImport
    }
    '/_app/newProposal/': {
      id: '/_app/newProposal/'
      path: '/'
      fullPath: '/newProposal/'
      preLoaderRoute: typeof AppNewProposalIndexImport
      parentRoute: typeof AppNewProposalImport
    }
    '/_app/proposals/': {
      id: '/_app/proposals/'
      path: '/'
      fullPath: '/proposals/'
      preLoaderRoute: typeof AppProposalsIndexImport
      parentRoute: typeof AppProposalsImport
    }
    '/_app/submitBreakout/': {
      id: '/_app/submitBreakout/'
      path: '/'
      fullPath: '/submitBreakout/'
      preLoaderRoute: typeof AppSubmitBreakoutIndexImport
      parentRoute: typeof AppSubmitBreakoutImport
    }
    '/_app/newProposal/$propType/': {
      id: '/_app/newProposal/$propType/'
      path: '/$propType'
      fullPath: '/newProposal/$propType'
      preLoaderRoute: typeof AppNewProposalPropTypeIndexImport
      parentRoute: typeof AppNewProposalImport
    }
  }
}

// Create and export the route tree

interface AppNewProposalRouteChildren {
  AppNewProposalIndexRoute: typeof AppNewProposalIndexRoute
  AppNewProposalPropTypeIndexRoute: typeof AppNewProposalPropTypeIndexRoute
}

const AppNewProposalRouteChildren: AppNewProposalRouteChildren = {
  AppNewProposalIndexRoute: AppNewProposalIndexRoute,
  AppNewProposalPropTypeIndexRoute: AppNewProposalPropTypeIndexRoute,
}

const AppNewProposalRouteWithChildren = AppNewProposalRoute._addFileChildren(
  AppNewProposalRouteChildren,
)

interface AppProposalsRouteChildren {
  AppProposalsPropIdRoute: typeof AppProposalsPropIdRoute
  AppProposalsIndexRoute: typeof AppProposalsIndexRoute
}

const AppProposalsRouteChildren: AppProposalsRouteChildren = {
  AppProposalsPropIdRoute: AppProposalsPropIdRoute,
  AppProposalsIndexRoute: AppProposalsIndexRoute,
}

const AppProposalsRouteWithChildren = AppProposalsRoute._addFileChildren(
  AppProposalsRouteChildren,
)

interface AppSubmitBreakoutRouteChildren {
  AppSubmitBreakoutIndexRoute: typeof AppSubmitBreakoutIndexRoute
}

const AppSubmitBreakoutRouteChildren: AppSubmitBreakoutRouteChildren = {
  AppSubmitBreakoutIndexRoute: AppSubmitBreakoutIndexRoute,
}

const AppSubmitBreakoutRouteWithChildren =
  AppSubmitBreakoutRoute._addFileChildren(AppSubmitBreakoutRouteChildren)

interface AppRouteChildren {
  AppNewProposalRoute: typeof AppNewProposalRouteWithChildren
  AppProposalsRoute: typeof AppProposalsRouteWithChildren
  AppSubmitBreakoutRoute: typeof AppSubmitBreakoutRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppNewProposalRoute: AppNewProposalRouteWithChildren,
  AppProposalsRoute: AppProposalsRouteWithChildren,
  AppSubmitBreakoutRoute: AppSubmitBreakoutRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/newProposal': typeof AppNewProposalRouteWithChildren
  '/proposals': typeof AppProposalsRouteWithChildren
  '/submitBreakout': typeof AppSubmitBreakoutRouteWithChildren
  '/': typeof AppIndexRoute
  '/proposals/$propId': typeof AppProposalsPropIdRoute
  '/newProposal/': typeof AppNewProposalIndexRoute
  '/proposals/': typeof AppProposalsIndexRoute
  '/submitBreakout/': typeof AppSubmitBreakoutIndexRoute
  '/newProposal/$propType': typeof AppNewProposalPropTypeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/proposals/$propId': typeof AppProposalsPropIdRoute
  '/newProposal': typeof AppNewProposalIndexRoute
  '/proposals': typeof AppProposalsIndexRoute
  '/submitBreakout': typeof AppSubmitBreakoutIndexRoute
  '/newProposal/$propType': typeof AppNewProposalPropTypeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/newProposal': typeof AppNewProposalRouteWithChildren
  '/_app/proposals': typeof AppProposalsRouteWithChildren
  '/_app/submitBreakout': typeof AppSubmitBreakoutRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/proposals/$propId': typeof AppProposalsPropIdRoute
  '/_app/newProposal/': typeof AppNewProposalIndexRoute
  '/_app/proposals/': typeof AppProposalsIndexRoute
  '/_app/submitBreakout/': typeof AppSubmitBreakoutIndexRoute
  '/_app/newProposal/$propType/': typeof AppNewProposalPropTypeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/newProposal'
    | '/proposals'
    | '/submitBreakout'
    | '/'
    | '/proposals/$propId'
    | '/newProposal/'
    | '/proposals/'
    | '/submitBreakout/'
    | '/newProposal/$propType'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/proposals/$propId'
    | '/newProposal'
    | '/proposals'
    | '/submitBreakout'
    | '/newProposal/$propType'
  id:
    | '__root__'
    | '/_app'
    | '/_app/newProposal'
    | '/_app/proposals'
    | '/_app/submitBreakout'
    | '/_app/'
    | '/_app/proposals/$propId'
    | '/_app/newProposal/'
    | '/_app/proposals/'
    | '/_app/submitBreakout/'
    | '/_app/newProposal/$propType/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/newProposal",
        "/_app/proposals",
        "/_app/submitBreakout",
        "/_app/"
      ]
    },
    "/_app/newProposal": {
      "filePath": "_app.newProposal.tsx",
      "parent": "/_app",
      "children": [
        "/_app/newProposal/",
        "/_app/newProposal/$propType/"
      ]
    },
    "/_app/proposals": {
      "filePath": "_app.proposals.tsx",
      "parent": "/_app",
      "children": [
        "/_app/proposals/$propId",
        "/_app/proposals/"
      ]
    },
    "/_app/submitBreakout": {
      "filePath": "_app.submitBreakout.tsx",
      "parent": "/_app",
      "children": [
        "/_app/submitBreakout/"
      ]
    },
    "/_app/": {
      "filePath": "_app.index.tsx",
      "parent": "/_app"
    },
    "/_app/proposals/$propId": {
      "filePath": "_app.proposals/$propId.tsx",
      "parent": "/_app/proposals"
    },
    "/_app/newProposal/": {
      "filePath": "_app.newProposal/index.tsx",
      "parent": "/_app/newProposal"
    },
    "/_app/proposals/": {
      "filePath": "_app.proposals/index.tsx",
      "parent": "/_app/proposals"
    },
    "/_app/submitBreakout/": {
      "filePath": "_app.submitBreakout/index.tsx",
      "parent": "/_app/submitBreakout"
    },
    "/_app/newProposal/$propType/": {
      "filePath": "_app.newProposal/$propType.index.tsx",
      "parent": "/_app/newProposal"
    }
  }
}
ROUTE_MANIFEST_END */
